"""
Objects
"""
enum OperationType {
	UNKNOWN_UNSPECIFIED
	INSERT
	REPLACE
	UPDATE
	DELETE
	"""
	 initial data send completed, but server remains connected
	 so it can send further updates
	
	"""
	READY
	"""
	 on client display the `error` field
	
	"""
	ERROR
	"""
	 used to notify client about a long operation status
	
	"""
	PROGRESS
	"""
	 operation was finished, server should disconnect after sending this
	
	"""
	FINISHED
}

enum ViewSortOrder {
	VIEW_SORT_ORDER_UNSPECIFIED
	ASC
	DESC
}

"""
Input
"""
input FilterParamInput {
	condition: String
	field: String
	operator: String
	value: String
}

input SortParamInput {
	field: String
	order: ViewSortOrder
}

"""
Type
"""
type Timestamp {
	"""
	 Represents seconds of UTC time since Unix epoch
	 1970-01-01T00:00:00Z. Must be from 0001-01-01T00:00:00Z to
	 9999-12-31T23:59:59Z inclusive.
	
	"""
	seconds: Int
	"""
	 Non-negative fractions of a second at nanosecond resolution. Negative
	 second values with fractions must still have non-negative nanos values
	 that count forward in time. Must be from 0 to 999,999,999
	 inclusive.
	
	"""
	nanos: Int
}

type Flight {
  	id: ID!
  	departure: String
  	departureTime: Timestamp
	arrival: String
	arrivalTime: Timestamp
	bookableSeats: Int
}

"""
Query
"""
input CheckCredentialsInput {
	email: String
	password: String
}

type CheckCredentialsResponse {
	authorized: Boolean
}

type Query {
  	checkCredentials(in: CheckCredentialsInput!): CheckCredentialsResponse!
}

"""
Subscription
"""
input FlightListInput {
	limit: Int
	offset: Int
	query: String
	sorts: [SortParamInput!]
	filter: [FilterParamInput!]
}

type FlightListResponse {
	operationType: OperationType
	flights: [Flight!]
}

type Subscription {
  	flightList(in: FlightListInput!): FlightListResponse!
}