package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.31

import (
	"context"

	graph "github.com/Dagosu/BookingApp/graphql-middleware/graph/generated"
	"github.com/Dagosu/BookingApp/graphql-middleware/graph/model"
)

// CheckCredentials is the resolver for the checkCredentials field.
func (r *queryResolver) CheckCredentials(ctx context.Context, in model.CheckCredentialsInput) (*model.CheckCredentialsResponse, error) {
	return r.resolveCheckCredentials(ctx, in)
}

// FlightList is the resolver for the flightList field.
func (r *subscriptionResolver) FlightList(ctx context.Context, in model.FlightListInput) (<-chan *model.FlightListResponse, error) {
	return r.resolveFlightList(ctx, in)
}

// Query returns graph.QueryResolver implementation.
func (r *Resolver) Query() graph.QueryResolver { return &queryResolver{r} }

// Subscription returns graph.SubscriptionResolver implementation.
func (r *Resolver) Subscription() graph.SubscriptionResolver { return &subscriptionResolver{r} }

type queryResolver struct{ *Resolver }
type subscriptionResolver struct{ *Resolver }
