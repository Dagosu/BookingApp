// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.9
// source: field_descriptor.proto

package datatypes

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	descriptorpb "google.golang.org/protobuf/types/descriptorpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EnumValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// label of the value eg: I (International)
	Label string `protobuf:"bytes,1,opt,name=label,proto3" json:"label,omitempty"`
	// value eg: I
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *EnumValue) Reset() {
	*x = EnumValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_field_descriptor_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnumValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnumValue) ProtoMessage() {}

func (x *EnumValue) ProtoReflect() protoreflect.Message {
	mi := &file_field_descriptor_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnumValue.ProtoReflect.Descriptor instead.
func (*EnumValue) Descriptor() ([]byte, []int) {
	return file_field_descriptor_proto_rawDescGZIP(), []int{0}
}

func (x *EnumValue) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *EnumValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// FieldDescriptor contains metadata about a field
type FieldDescriptor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// id is the field descriptor's unique identifier randomly generated.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// created_at is the time when the document was first inserted into the
	// database.
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// updated_at is the time when document was last updated.
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// view_types is data_view.proto type correspondent. It can be anything, but
	// if used in a multi service app, the recommendation is to prefix the type
	// with the service name eg: 'flight::flights' or 'mdm::airlines'
	ViewTypes []string `protobuf:"bytes,4,rep,name=view_types,json=viewTypes,proto3" json:"view_types,omitempty"`
	// name is the flat identifier field descriptor's name. This is the identifier
	// that services should use when filtering fields / displaying permissions per
	// field / asking for a field's descriptor / etc should be unique per
	// view_type (no two field descriptors with the same name for the same
	// view_type) Eg: "pax_boarded"
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	// label is the human readable descriptor. Usually displayed as labels in
	// forms, table headings, etc Eg: "Pax Brd"
	Label string `protobuf:"bytes,6,opt,name=label,proto3" json:"label,omitempty"`
	// description contains the human readable description.
	// Eg: "Passengers boarded"
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	// path is the "dot" notation path of field in documents (of type indicated by
	// view_type). Eg: "pax.boarded"
	Path string `protobuf:"bytes,8,opt,name=path,proto3" json:"path,omitempty"`
	// type of the field (used for rendering / validation). If a primitive
	// type is not sufficient (the field represents for example a structure),
	// "CUSTOM" `type` + `type_hint` should be used
	Type FieldType `protobuf:"varint,9,opt,name=type,proto3,enum=field_type.FieldType" json:"type,omitempty"`
	// type_hint is where an extension to type should be placed.
	// eg: "multi_line"
	TypeHint string `protobuf:"bytes,10,opt,name=type_hint,json=typeHint,proto3" json:"type_hint,omitempty"`
	// da_name is the field name used in DA previous AODB implementation. It
	// serves to provide insight and mapping when parsing data. Eg: "NOSE"
	DaName string `protobuf:"bytes,11,opt,name=da_name,json=daName,proto3" json:"da_name,omitempty"`
	// format is helpful (mostly for datetime/timestamp) to have a format how the
	// value of the field should be displayed
	// eg: "dd/mm/yyyy"
	Format string `protobuf:"bytes,12,opt,name=format,proto3" json:"format,omitempty"`
	// sources from where the field values can be updated
	Sources []string `protobuf:"bytes,13,rep,name=sources,proto3" json:"sources,omitempty"`
	// alrn of the field descriptor
	Alrn string `protobuf:"bytes,14,opt,name=alrn,proto3" json:"alrn,omitempty"`
	// field_type - is the actual field type
	FieldType string `protobuf:"bytes,15,opt,name=field_type,json=fieldType,proto3" json:"field_type,omitempty"`
	// enum_values - for type enum
	EnumValues []*EnumValue `protobuf:"bytes,16,rep,name=enum_values,json=enumValues,proto3" json:"enum_values,omitempty"`
	// deleted_at is time when the record was marked as deleted
	DeletedAt *timestamppb.Timestamp `protobuf:"bytes,17,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	// deleted_by is the user that deleted the record
	DeletedBy string `protobuf:"bytes,18,opt,name=deleted_by,json=deletedBy,proto3" json:"deleted_by,omitempty"`
}

func (x *FieldDescriptor) Reset() {
	*x = FieldDescriptor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_field_descriptor_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FieldDescriptor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FieldDescriptor) ProtoMessage() {}

func (x *FieldDescriptor) ProtoReflect() protoreflect.Message {
	mi := &file_field_descriptor_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FieldDescriptor.ProtoReflect.Descriptor instead.
func (*FieldDescriptor) Descriptor() ([]byte, []int) {
	return file_field_descriptor_proto_rawDescGZIP(), []int{1}
}

func (x *FieldDescriptor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FieldDescriptor) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *FieldDescriptor) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *FieldDescriptor) GetViewTypes() []string {
	if x != nil {
		return x.ViewTypes
	}
	return nil
}

func (x *FieldDescriptor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FieldDescriptor) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *FieldDescriptor) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *FieldDescriptor) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FieldDescriptor) GetType() FieldType {
	if x != nil {
		return x.Type
	}
	return FieldType_FIELD_TYPE_UNSPECIFIED
}

func (x *FieldDescriptor) GetTypeHint() string {
	if x != nil {
		return x.TypeHint
	}
	return ""
}

func (x *FieldDescriptor) GetDaName() string {
	if x != nil {
		return x.DaName
	}
	return ""
}

func (x *FieldDescriptor) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *FieldDescriptor) GetSources() []string {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *FieldDescriptor) GetAlrn() string {
	if x != nil {
		return x.Alrn
	}
	return ""
}

func (x *FieldDescriptor) GetFieldType() string {
	if x != nil {
		return x.FieldType
	}
	return ""
}

func (x *FieldDescriptor) GetEnumValues() []*EnumValue {
	if x != nil {
		return x.EnumValues
	}
	return nil
}

func (x *FieldDescriptor) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

func (x *FieldDescriptor) GetDeletedBy() string {
	if x != nil {
		return x.DeletedBy
	}
	return ""
}

var file_field_descriptor_proto_extTypes = []protoimpl.ExtensionInfo{
	{
		ExtendedType:  (*descriptorpb.FieldOptions)(nil),
		ExtensionType: (*FieldDescriptor)(nil),
		Field:         1234,
		Name:          "mdm.meta",
		Tag:           "bytes,1234,opt,name=meta",
		Filename:      "field_descriptor.proto",
	},
}

// Extension fields to descriptorpb.FieldOptions.
var (
	// meta is used for what?
	//
	// optional mdm.FieldDescriptor meta = 1234;
	E_Meta = &file_field_descriptor_proto_extTypes[0]
)

var File_field_descriptor_proto protoreflect.FileDescriptor

var file_field_descriptor_proto_rawDesc = []byte{
	0x0a, 0x16, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x6d, 0x64, 0x6d, 0x1a, 0x10, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x37, 0x0a, 0x09, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xe7, 0x04, 0x0a, 0x0f,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x65, 0x77, 0x54,
	0x79, 0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x70, 0x61, 0x74, 0x68, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x68, 0x69, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x48, 0x69, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x64, 0x61, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64,
	0x61, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x6c, 0x72, 0x6e, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x6c, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66,
	0x69, 0x65, 0x6c, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x65, 0x6e,
	0x75, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x64, 0x6d, 0x2e, 0x45, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0a, 0x65, 0x6e, 0x75, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x5f, 0x62, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x42, 0x79, 0x3a, 0x48, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x1d, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0xd2, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x64, 0x6d, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x6f, 0x72, 0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x42,
	0x28, 0x5a, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x61,
	0x67, 0x6f, 0x73, 0x75, 0x2f, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x70, 0x70, 0x2f,
	0x64, 0x61, 0x74, 0x61, 0x74, 0x79, 0x70, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_field_descriptor_proto_rawDescOnce sync.Once
	file_field_descriptor_proto_rawDescData = file_field_descriptor_proto_rawDesc
)

func file_field_descriptor_proto_rawDescGZIP() []byte {
	file_field_descriptor_proto_rawDescOnce.Do(func() {
		file_field_descriptor_proto_rawDescData = protoimpl.X.CompressGZIP(file_field_descriptor_proto_rawDescData)
	})
	return file_field_descriptor_proto_rawDescData
}

var file_field_descriptor_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_field_descriptor_proto_goTypes = []interface{}{
	(*EnumValue)(nil),                 // 0: mdm.EnumValue
	(*FieldDescriptor)(nil),           // 1: mdm.FieldDescriptor
	(*timestamppb.Timestamp)(nil),     // 2: google.protobuf.Timestamp
	(FieldType)(0),                    // 3: field_type.FieldType
	(*descriptorpb.FieldOptions)(nil), // 4: google.protobuf.FieldOptions
}
var file_field_descriptor_proto_depIdxs = []int32{
	2, // 0: mdm.FieldDescriptor.created_at:type_name -> google.protobuf.Timestamp
	2, // 1: mdm.FieldDescriptor.updated_at:type_name -> google.protobuf.Timestamp
	3, // 2: mdm.FieldDescriptor.type:type_name -> field_type.FieldType
	0, // 3: mdm.FieldDescriptor.enum_values:type_name -> mdm.EnumValue
	2, // 4: mdm.FieldDescriptor.deleted_at:type_name -> google.protobuf.Timestamp
	4, // 5: mdm.meta:extendee -> google.protobuf.FieldOptions
	1, // 6: mdm.meta:type_name -> mdm.FieldDescriptor
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	6, // [6:7] is the sub-list for extension type_name
	5, // [5:6] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_field_descriptor_proto_init() }
func file_field_descriptor_proto_init() {
	if File_field_descriptor_proto != nil {
		return
	}
	file_field_type_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_field_descriptor_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnumValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_field_descriptor_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FieldDescriptor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_field_descriptor_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 1,
			NumServices:   0,
		},
		GoTypes:           file_field_descriptor_proto_goTypes,
		DependencyIndexes: file_field_descriptor_proto_depIdxs,
		MessageInfos:      file_field_descriptor_proto_msgTypes,
		ExtensionInfos:    file_field_descriptor_proto_extTypes,
	}.Build()
	File_field_descriptor_proto = out.File
	file_field_descriptor_proto_rawDesc = nil
	file_field_descriptor_proto_goTypes = nil
	file_field_descriptor_proto_depIdxs = nil
}
